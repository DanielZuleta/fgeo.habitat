% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tt_test.R
\name{tt_test}
\alias{tt_test}
\alias{torusonesp.all}
\title{Torus Translation Test to determine habitat associations of tree species.}
\usage{
tt_test(census, sp, habitat, plotdim = extract_plotdim(habitat),
  gridsize = extract_gridsize(habitat))

torusonesp.all(species, hab.index20, allabund20, plotdim, gridsize)
}
\arguments{
\item{census}{A dataframe; a ForestGEO \emph{tree} table (see details).}

\item{sp, species}{Character sting giving species names. \code{torusonesp.all()}can
take only one species; \code{tt_test()} can take any number of species.}

\item{habitat, hab.index20}{Object giving the habitat designation for each
plot partition defined by \code{gridsize}.}

\item{plotdim}{Plot dimensions.}

\item{gridsize}{Grid size. If using \code{torusonesp.all()}, ensure it matches the
gridsize on which the habitats are defined and the abundances were
calculated.}

\item{allabund20}{The output of \code{abund_index()}.}
}
\value{
\itemize{
\item \code{tt_test()}: A dataframe.
\item \code{torusonesp.all()}: A numeric matrix.
}
}
\description{
Use these functions to determine habitat associations. You most likely need
only \code{tt_test()}. \code{torusonesp.all()} produces the same result but work only
for a single species;  it is softly deprecated -- it is included only to
preserve the original code.
}
\details{
You should only try to determine the habitat association for sufficiently
abundant species - in a 50-ha plot, a minimum abundance of 50 trees/species
has been used.

\code{tt_test()} uses \code{abundanceperquad()} -- via \code{abund_index()} -- which is
slow. You may calculate abundance per quadrat independently, feed it to the
argument \code{allabund20} of \code{torusonesp.all()}, and reformat the output with
\code{to_df()}. You can iterate over multiple species with a for loop or a
functional such as \code{lapply()}.

This test should use individual trees not the (potentially multiple) stems of
individual trees. This test only makes sense at the population level. We are
interested in knowing whether or not individuals of a species are aggregated
on a habitat. Multiple stems of an individual do not represent population
level processes but individual level processes.
}
\section{Acknowledgments}{

Nestor Engone Obiang, David Kenfack, Jennifer Baltzer, and Rutuja
Chitra-Tarak provided feedback. Daniel Zuleta provided guidance.
}

\section{Interpretation of Output}{

\itemize{
\item \code{N.Hab.1}: Count of stems of the focal species in habitat 1.
\item \code{Gr.Hab.1}: Count of instances the observed relative density of the focal
species on habitat 1 was greater than the relative density based on the TT
habitat map.
\item \code{Ls.Hab.1}: Count of instances the observed relative density of the focal
species on habitat 1 was less than the relative density based on the TT
habitat map.
\item \code{Eq.Hab.1}: Count of instances the observed relative density of the focal
species on habitat 1 was equal to the relative density based on the TT
habitat map.
The sum of the \code{Gr.Hab.x}, \code{Ls.Hab.x}, and \code{Eq.Hab.x} columns for one habitat
equals the number of 20 x20 quads in the plot.
The \code{Rep.Agg.Neut} columns for each habitat indicate whether the species is
significantly repelled (-1), aggregated (1), or neutrally distributed (0) on
the habitat in question.
The probabilities associated with the test for whether these patterns are
statistically significant are in the \code{Obs.Quantile} columns for each habitat.
Note that to calculate the probability for repelled, it is the value given,
but to calculate the probability for aggregated, it is 1- the value given.
}
}

\examples{
library(dplyr)
library(fgeo.tool)

habitat <- luquillo_habitat
census <- luquillo_top3_sp

# Pick alive trees, of 10 mm or more
pick <- filter(census, status == "A", dbh >= 10)
# Pick sufficiently abundant trees
pick <- add_count(pick, sp)
pick <- filter(pick, n > 50)

# Test any number of species
species <- unique(pick$sp)
tt_lst <- tt_test(census, species, habitat)

# Output a list of matrices
str(tt_lst, give.attr = FALSE)

# A list
tt_lst

# A combined matrix
tt_matrix <- Reduce(rbind, tt_lst)
head(tt_matrix)

# A combined dataframe with some tweaks for easier interpretation
to_df(tt_lst)

# Test one species with original function (outputs a matrix)

plotdim <- c(320, 500)
gridsize <- 20
abundance <- abund_index(pick, plotdim, gridsize)

tt_mat <- torusonesp.all(species[[1]],
  hab.index20 = habitat,
  allabund20 = abundance,
  plotdim = plotdim,
  gridsize = gridsize
)
tt_mat

# Test multiple species with original function (outputs a matrix)
tt_mat_lst <- lapply(
  species,
  torusonesp.all,
  hab.index20 = habitat,
  allabund20 = abundance,
  plotdim = plotdim,
  gridsize = gridsize
)
tt_mat_lst
}
\seealso{
\code{\link[fgeo.tool:to_df]{fgeo.tool::to_df()}}.
}
\author{
Sabrina Russo, Daniel Zuleta, Matteo Detto, and Kyle Harms.
}
