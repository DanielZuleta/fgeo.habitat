% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tt_test.R
\name{tt_test_lst}
\alias{tt_test_lst}
\title{Torus Translation Test to determine habitat associations of tree species.}
\usage{
tt_test_lst(sp, census, habitat, plotdim = extract_plotdim(habitat),
  gridsize = extract_gridsize(habitat))
}
\arguments{
\item{sp, species}{Character sting giving species names. \code{tt_test_one()} can
take only one species; \code{tt_test_lst()} can take any number of species.}

\item{census}{A dataframe; a ForestGEO census.}

\item{habitat, hab.index20}{Object giving the habitat designation for each
plot partition defined by \code{gridsize}.}

\item{plotdim}{Plot dimensions.}

\item{gridsize}{Grid size. If using \code{tt_test_one()}, ensure it matches the
gridsize on which the habitats are defined and the abundances were
calculated.}

\item{allabund20}{The output of \code{abund_index()}.}
}
\value{
\itemize{
\item \code{tt_test_lst()}: A dataframe.
\item \code{tt_test_one()}: A numeric matrix.
}
}
\description{
Torus Translation Test (TT test) to determine habitat associations of tree
species.
}
\details{
You should only try to determine the habitat association for sufficiently
abundant species - in a 50-ha plot, a minimum abundance of 50 trees/species
has been used.

\code{tt_test_lst()} uses \code{abundanceperquad()} -- via \code{abund_index()} -- which is
slow. You may calculate abundance per quadrat independently, feed it to the
argument \code{allabund20} of \code{tt_test_one()}, and reformat the output with
\code{tt_df()}. See Examples to iterate over multiple species.
}
\examples{
# Setup

# For easier data wranging
library(dplyr)

# Example data
habitat <- luquillo_habitat
census <- luquillo_top3_sp

# Pick alive trees, of 10 mm or more
pick <- filter(census, status == "A", dbh >= 10)
# Pick sufficiently abundant trees
pick <- add_count(pick, sp)
pick <- filter(pick, n > 50)

species <- unique(pick$sp)



# Test with the wrapper tt_test_lst()

out <- tt_test_lst(species, census, habitat)
# Try also: View(out)
head(out)
tail(out)



# Test without the wrapper, i.e. with tt_test_one()

# Setup
plotdim <- c(320, 500)
gridsize <- 20
abundance <- abund_index(pick, plotdim, gridsize)

# One species
out2 <- tt_test_one(unique(pick$sp)[[2]],
  hab.index20 = habitat,
  allabund20 = abundance,
  plotdim = plotdim,
  gridsize = gridsize
)
out2
# Alternative data structure; try also View(tt_df(out2))
head(tt_df(out2))

# Multiple species
out3 <- lapply(
  species, tt_test_one,
  hab.index20 = habitat,
  allabund20 = abundance,
  plotdim = plotdim,
  gridsize = gridsize
)
out3
# Alternative data structure; try also View(tt_df(out3))
head(tt_df(out3))
}
\seealso{
\code{\link[=tt_df]{tt_df()}}.
}
\author{
Sabrina Russo, Daniel Zuleta, Matteo Detto, and Kyle Harms.
}
